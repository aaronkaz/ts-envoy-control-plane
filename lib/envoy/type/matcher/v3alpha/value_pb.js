// source: envoy/type/matcher/v3alpha/value.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_type_matcher_v3alpha_number_pb = require('../../../../envoy/type/matcher/v3alpha/number_pb.js');
goog.object.extend(proto, envoy_type_matcher_v3alpha_number_pb);
var envoy_type_matcher_v3alpha_string_pb = require('../../../../envoy/type/matcher/v3alpha/string_pb.js');
goog.object.extend(proto, envoy_type_matcher_v3alpha_string_pb);
var udpa_annotations_versioning_pb = require('../../../../udpa/annotations/versioning_pb.js');
goog.object.extend(proto, udpa_annotations_versioning_pb);
var validate_validate_pb = require('../../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.envoy.type.matcher.v3alpha.ListMatcher', null, global);
goog.exportSymbol('proto.envoy.type.matcher.v3alpha.ListMatcher.MatchPatternCase', null, global);
goog.exportSymbol('proto.envoy.type.matcher.v3alpha.ValueMatcher', null, global);
goog.exportSymbol('proto.envoy.type.matcher.v3alpha.ValueMatcher.MatchPatternCase', null, global);
goog.exportSymbol('proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_);
};
goog.inherits(proto.envoy.type.matcher.v3alpha.ValueMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.type.matcher.v3alpha.ValueMatcher.displayName = 'proto.envoy.type.matcher.v3alpha.ValueMatcher';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.displayName = 'proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.type.matcher.v3alpha.ListMatcher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.type.matcher.v3alpha.ListMatcher.oneofGroups_);
};
goog.inherits(proto.envoy.type.matcher.v3alpha.ListMatcher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.type.matcher.v3alpha.ListMatcher.displayName = 'proto.envoy.type.matcher.v3alpha.ListMatcher';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.MatchPatternCase = {
  MATCH_PATTERN_NOT_SET: 0,
  NULL_MATCH: 1,
  DOUBLE_MATCH: 2,
  STRING_MATCH: 3,
  BOOL_MATCH: 4,
  PRESENT_MATCH: 5,
  LIST_MATCH: 6
};

/**
 * @return {proto.envoy.type.matcher.v3alpha.ValueMatcher.MatchPatternCase}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.getMatchPatternCase = function() {
  return /** @type {proto.envoy.type.matcher.v3alpha.ValueMatcher.MatchPatternCase} */(jspb.Message.computeOneofCase(this, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.type.matcher.v3alpha.ValueMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.type.matcher.v3alpha.ValueMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    nullMatch: (f = msg.getNullMatch()) && proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.toObject(includeInstance, f),
    doubleMatch: (f = msg.getDoubleMatch()) && envoy_type_matcher_v3alpha_number_pb.DoubleMatcher.toObject(includeInstance, f),
    stringMatch: (f = msg.getStringMatch()) && envoy_type_matcher_v3alpha_string_pb.StringMatcher.toObject(includeInstance, f),
    boolMatch: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    presentMatch: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    listMatch: (f = msg.getListMatch()) && proto.envoy.type.matcher.v3alpha.ListMatcher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.type.matcher.v3alpha.ValueMatcher;
  return proto.envoy.type.matcher.v3alpha.ValueMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.type.matcher.v3alpha.ValueMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch;
      reader.readMessage(value,proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.deserializeBinaryFromReader);
      msg.setNullMatch(value);
      break;
    case 2:
      var value = new envoy_type_matcher_v3alpha_number_pb.DoubleMatcher;
      reader.readMessage(value,envoy_type_matcher_v3alpha_number_pb.DoubleMatcher.deserializeBinaryFromReader);
      msg.setDoubleMatch(value);
      break;
    case 3:
      var value = new envoy_type_matcher_v3alpha_string_pb.StringMatcher;
      reader.readMessage(value,envoy_type_matcher_v3alpha_string_pb.StringMatcher.deserializeBinaryFromReader);
      msg.setStringMatch(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolMatch(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPresentMatch(value);
      break;
    case 6:
      var value = new proto.envoy.type.matcher.v3alpha.ListMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3alpha.ListMatcher.deserializeBinaryFromReader);
      msg.setListMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.type.matcher.v3alpha.ValueMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.type.matcher.v3alpha.ValueMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNullMatch();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.serializeBinaryToWriter
    );
  }
  f = message.getDoubleMatch();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      envoy_type_matcher_v3alpha_number_pb.DoubleMatcher.serializeBinaryToWriter
    );
  }
  f = message.getStringMatch();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      envoy_type_matcher_v3alpha_string_pb.StringMatcher.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getListMatch();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.type.matcher.v3alpha.ListMatcher.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch;
  return proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional NullMatch null_match = 1;
 * @return {?proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.getNullMatch = function() {
  return /** @type{?proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch, 1));
};


/**
 * @param {?proto.envoy.type.matcher.v3alpha.ValueMatcher.NullMatch|undefined} value
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
*/
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.setNullMatch = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.clearNullMatch = function() {
  return this.setNullMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.hasNullMatch = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DoubleMatcher double_match = 2;
 * @return {?proto.envoy.type.matcher.v3alpha.DoubleMatcher}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.getDoubleMatch = function() {
  return /** @type{?proto.envoy.type.matcher.v3alpha.DoubleMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_v3alpha_number_pb.DoubleMatcher, 2));
};


/**
 * @param {?proto.envoy.type.matcher.v3alpha.DoubleMatcher|undefined} value
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
*/
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.setDoubleMatch = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.clearDoubleMatch = function() {
  return this.setDoubleMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.hasDoubleMatch = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StringMatcher string_match = 3;
 * @return {?proto.envoy.type.matcher.v3alpha.StringMatcher}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.getStringMatch = function() {
  return /** @type{?proto.envoy.type.matcher.v3alpha.StringMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_v3alpha_string_pb.StringMatcher, 3));
};


/**
 * @param {?proto.envoy.type.matcher.v3alpha.StringMatcher|undefined} value
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
*/
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.setStringMatch = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.clearStringMatch = function() {
  return this.setStringMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.hasStringMatch = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool bool_match = 4;
 * @return {boolean}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.getBoolMatch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.setBoolMatch = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.clearBoolMatch = function() {
  return jspb.Message.setOneofField(this, 4, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.hasBoolMatch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool present_match = 5;
 * @return {boolean}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.getPresentMatch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.setPresentMatch = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.clearPresentMatch = function() {
  return jspb.Message.setOneofField(this, 5, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.hasPresentMatch = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ListMatcher list_match = 6;
 * @return {?proto.envoy.type.matcher.v3alpha.ListMatcher}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.getListMatch = function() {
  return /** @type{?proto.envoy.type.matcher.v3alpha.ListMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3alpha.ListMatcher, 6));
};


/**
 * @param {?proto.envoy.type.matcher.v3alpha.ListMatcher|undefined} value
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
*/
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.setListMatch = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.envoy.type.matcher.v3alpha.ValueMatcher.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.type.matcher.v3alpha.ValueMatcher} returns this
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.clearListMatch = function() {
  return this.setListMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.type.matcher.v3alpha.ValueMatcher.prototype.hasListMatch = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.MatchPatternCase = {
  MATCH_PATTERN_NOT_SET: 0,
  ONE_OF: 1
};

/**
 * @return {proto.envoy.type.matcher.v3alpha.ListMatcher.MatchPatternCase}
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.prototype.getMatchPatternCase = function() {
  return /** @type {proto.envoy.type.matcher.v3alpha.ListMatcher.MatchPatternCase} */(jspb.Message.computeOneofCase(this, proto.envoy.type.matcher.v3alpha.ListMatcher.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.type.matcher.v3alpha.ListMatcher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.type.matcher.v3alpha.ListMatcher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.toObject = function(includeInstance, msg) {
  var f, obj = {
    oneOf: (f = msg.getOneOf()) && proto.envoy.type.matcher.v3alpha.ValueMatcher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.type.matcher.v3alpha.ListMatcher}
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.type.matcher.v3alpha.ListMatcher;
  return proto.envoy.type.matcher.v3alpha.ListMatcher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.type.matcher.v3alpha.ListMatcher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.type.matcher.v3alpha.ListMatcher}
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.type.matcher.v3alpha.ValueMatcher;
      reader.readMessage(value,proto.envoy.type.matcher.v3alpha.ValueMatcher.deserializeBinaryFromReader);
      msg.setOneOf(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.type.matcher.v3alpha.ListMatcher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.type.matcher.v3alpha.ListMatcher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOneOf();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.type.matcher.v3alpha.ValueMatcher.serializeBinaryToWriter
    );
  }
};


/**
 * optional ValueMatcher one_of = 1;
 * @return {?proto.envoy.type.matcher.v3alpha.ValueMatcher}
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.prototype.getOneOf = function() {
  return /** @type{?proto.envoy.type.matcher.v3alpha.ValueMatcher} */ (
    jspb.Message.getWrapperField(this, proto.envoy.type.matcher.v3alpha.ValueMatcher, 1));
};


/**
 * @param {?proto.envoy.type.matcher.v3alpha.ValueMatcher|undefined} value
 * @return {!proto.envoy.type.matcher.v3alpha.ListMatcher} returns this
*/
proto.envoy.type.matcher.v3alpha.ListMatcher.prototype.setOneOf = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.envoy.type.matcher.v3alpha.ListMatcher.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.type.matcher.v3alpha.ListMatcher} returns this
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.prototype.clearOneOf = function() {
  return this.setOneOf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.type.matcher.v3alpha.ListMatcher.prototype.hasOneOf = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.envoy.type.matcher.v3alpha);
