// source: envoy/api/v2/auth/cert.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_api_v2_core_base_pb = require('../../../../envoy/api/v2/core/base_pb.js');
goog.object.extend(proto, envoy_api_v2_core_base_pb);
var envoy_api_v2_core_config_source_pb = require('../../../../envoy/api/v2/core/config_source_pb.js');
goog.object.extend(proto, envoy_api_v2_core_config_source_pb);
var envoy_type_matcher_string_pb = require('../../../../envoy/type/matcher/string_pb.js');
goog.object.extend(proto, envoy_type_matcher_string_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var udpa_annotations_migrate_pb = require('../../../../udpa/annotations/migrate_pb.js');
goog.object.extend(proto, udpa_annotations_migrate_pb);
var udpa_annotations_sensitive_pb = require('../../../../udpa/annotations/sensitive_pb.js');
goog.object.extend(proto, udpa_annotations_sensitive_pb);
var udpa_annotations_status_pb = require('../../../../udpa/annotations/status_pb.js');
goog.object.extend(proto, udpa_annotations_status_pb);
var validate_validate_pb = require('../../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.envoy.api.v2.auth.CertificateValidationContext', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.CommonTlsContext', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.CommonTlsContext.ValidationContextTypeCase', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.DownstreamTlsContext', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.DownstreamTlsContext.SessionTicketKeysTypeCase', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.GenericSecret', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.PrivateKeyProvider', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.PrivateKeyProvider.ConfigTypeCase', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.SdsSecretConfig', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.Secret', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.Secret.TypeCase', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.TlsCertificate', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.TlsParameters', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.TlsParameters.TlsProtocol', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.TlsSessionTicketKeys', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.UpstreamTlsContext', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.TlsParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.api.v2.auth.TlsParameters.repeatedFields_, null);
};
goog.inherits(proto.envoy.api.v2.auth.TlsParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.TlsParameters.displayName = 'proto.envoy.api.v2.auth.TlsParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.PrivateKeyProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_);
};
goog.inherits(proto.envoy.api.v2.auth.PrivateKeyProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.PrivateKeyProvider.displayName = 'proto.envoy.api.v2.auth.PrivateKeyProvider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.TlsCertificate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.api.v2.auth.TlsCertificate.repeatedFields_, null);
};
goog.inherits(proto.envoy.api.v2.auth.TlsCertificate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.TlsCertificate.displayName = 'proto.envoy.api.v2.auth.TlsCertificate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.api.v2.auth.TlsSessionTicketKeys.repeatedFields_, null);
};
goog.inherits(proto.envoy.api.v2.auth.TlsSessionTicketKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.TlsSessionTicketKeys.displayName = 'proto.envoy.api.v2.auth.TlsSessionTicketKeys';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.CertificateValidationContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.api.v2.auth.CertificateValidationContext.repeatedFields_, null);
};
goog.inherits(proto.envoy.api.v2.auth.CertificateValidationContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.CertificateValidationContext.displayName = 'proto.envoy.api.v2.auth.CertificateValidationContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.CommonTlsContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.api.v2.auth.CommonTlsContext.repeatedFields_, proto.envoy.api.v2.auth.CommonTlsContext.oneofGroups_);
};
goog.inherits(proto.envoy.api.v2.auth.CommonTlsContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.CommonTlsContext.displayName = 'proto.envoy.api.v2.auth.CommonTlsContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.displayName = 'proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.UpstreamTlsContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.api.v2.auth.UpstreamTlsContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.UpstreamTlsContext.displayName = 'proto.envoy.api.v2.auth.UpstreamTlsContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.DownstreamTlsContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.api.v2.auth.DownstreamTlsContext.oneofGroups_);
};
goog.inherits(proto.envoy.api.v2.auth.DownstreamTlsContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.DownstreamTlsContext.displayName = 'proto.envoy.api.v2.auth.DownstreamTlsContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.GenericSecret = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.api.v2.auth.GenericSecret, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.GenericSecret.displayName = 'proto.envoy.api.v2.auth.GenericSecret';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.SdsSecretConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.api.v2.auth.SdsSecretConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.SdsSecretConfig.displayName = 'proto.envoy.api.v2.auth.SdsSecretConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.Secret = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.api.v2.auth.Secret.oneofGroups_);
};
goog.inherits(proto.envoy.api.v2.auth.Secret, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.Secret.displayName = 'proto.envoy.api.v2.auth.Secret';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.api.v2.auth.TlsParameters.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.TlsParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.TlsParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    tlsMinimumProtocolVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tlsMaximumProtocolVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cipherSuitesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    ecdhCurvesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.TlsParameters}
 */
proto.envoy.api.v2.auth.TlsParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.TlsParameters;
  return proto.envoy.api.v2.auth.TlsParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.TlsParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.TlsParameters}
 */
proto.envoy.api.v2.auth.TlsParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} */ (reader.readEnum());
      msg.setTlsMinimumProtocolVersion(value);
      break;
    case 2:
      var value = /** @type {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} */ (reader.readEnum());
      msg.setTlsMaximumProtocolVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCipherSuites(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addEcdhCurves(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.TlsParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.TlsParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTlsMinimumProtocolVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTlsMaximumProtocolVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCipherSuitesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getEcdhCurvesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.api.v2.auth.TlsParameters.TlsProtocol = {
  TLS_AUTO: 0,
  TLSV1_0: 1,
  TLSV1_1: 2,
  TLSV1_2: 3,
  TLSV1_3: 4
};

/**
 * optional TlsProtocol tls_minimum_protocol_version = 1;
 * @return {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.getTlsMinimumProtocolVersion = function() {
  return /** @type {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} value
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.setTlsMinimumProtocolVersion = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional TlsProtocol tls_maximum_protocol_version = 2;
 * @return {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.getTlsMaximumProtocolVersion = function() {
  return /** @type {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} value
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.setTlsMaximumProtocolVersion = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string cipher_suites = 3;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.getCipherSuitesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.setCipherSuitesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.addCipherSuites = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.clearCipherSuitesList = function() {
  return this.setCipherSuitesList([]);
};


/**
 * repeated string ecdh_curves = 4;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.getEcdhCurvesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.setEcdhCurvesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.addEcdhCurves = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.clearEcdhCurvesList = function() {
  return this.setEcdhCurvesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.ConfigTypeCase = {
  CONFIG_TYPE_NOT_SET: 0,
  CONFIG: 2,
  TYPED_CONFIG: 3
};

/**
 * @return {proto.envoy.api.v2.auth.PrivateKeyProvider.ConfigTypeCase}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.getConfigTypeCase = function() {
  return /** @type {proto.envoy.api.v2.auth.PrivateKeyProvider.ConfigTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.PrivateKeyProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.PrivateKeyProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    providerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    config: (f = msg.getConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    typedConfig: (f = msg.getTypedConfig()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.PrivateKeyProvider;
  return proto.envoy.api.v2.auth.PrivateKeyProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.PrivateKeyProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderName(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setTypedConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.PrivateKeyProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.PrivateKeyProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProviderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getTypedConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string provider_name = 1;
 * @return {string}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.getProviderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.setProviderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct config = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.getConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
*/
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.setConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Any typed_config = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.getTypedConfig = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
*/
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.setTypedConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.clearTypedConfig = function() {
  return this.setTypedConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.hasTypedConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.api.v2.auth.TlsCertificate.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.TlsCertificate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.TlsCertificate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsCertificate.toObject = function(includeInstance, msg) {
  var f, obj = {
    certificateChain: (f = msg.getCertificateChain()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    privateKey: (f = msg.getPrivateKey()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    privateKeyProvider: (f = msg.getPrivateKeyProvider()) && proto.envoy.api.v2.auth.PrivateKeyProvider.toObject(includeInstance, f),
    password: (f = msg.getPassword()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    ocspStaple: (f = msg.getOcspStaple()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    signedCertificateTimestampList: jspb.Message.toObjectList(msg.getSignedCertificateTimestampList(),
    envoy_api_v2_core_base_pb.DataSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate}
 */
proto.envoy.api.v2.auth.TlsCertificate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.TlsCertificate;
  return proto.envoy.api.v2.auth.TlsCertificate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.TlsCertificate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate}
 */
proto.envoy.api.v2.auth.TlsCertificate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setCertificateChain(value);
      break;
    case 2:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setPrivateKey(value);
      break;
    case 6:
      var value = new proto.envoy.api.v2.auth.PrivateKeyProvider;
      reader.readMessage(value,proto.envoy.api.v2.auth.PrivateKeyProvider.deserializeBinaryFromReader);
      msg.setPrivateKeyProvider(value);
      break;
    case 3:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setPassword(value);
      break;
    case 4:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setOcspStaple(value);
      break;
    case 5:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.addSignedCertificateTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.TlsCertificate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.TlsCertificate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsCertificate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCertificateChain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getPrivateKey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getPrivateKeyProvider();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.api.v2.auth.PrivateKeyProvider.serializeBinaryToWriter
    );
  }
  f = message.getPassword();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getOcspStaple();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getSignedCertificateTimestampList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.api.v2.core.DataSource certificate_chain = 1;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getCertificateChain = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 1));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setCertificateChain = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearCertificateChain = function() {
  return this.setCertificateChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasCertificateChain = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.api.v2.core.DataSource private_key = 2;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getPrivateKey = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 2));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setPrivateKey = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearPrivateKey = function() {
  return this.setPrivateKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasPrivateKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PrivateKeyProvider private_key_provider = 6;
 * @return {?proto.envoy.api.v2.auth.PrivateKeyProvider}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getPrivateKeyProvider = function() {
  return /** @type{?proto.envoy.api.v2.auth.PrivateKeyProvider} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.PrivateKeyProvider, 6));
};


/**
 * @param {?proto.envoy.api.v2.auth.PrivateKeyProvider|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setPrivateKeyProvider = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearPrivateKeyProvider = function() {
  return this.setPrivateKeyProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasPrivateKeyProvider = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional envoy.api.v2.core.DataSource password = 3;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getPassword = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 3));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setPassword = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearPassword = function() {
  return this.setPassword(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.api.v2.core.DataSource ocsp_staple = 4;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getOcspStaple = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 4));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setOcspStaple = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearOcspStaple = function() {
  return this.setOcspStaple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasOcspStaple = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;
 * @return {!Array<!proto.envoy.api.v2.core.DataSource>}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getSignedCertificateTimestampList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.core.DataSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 5));
};


/**
 * @param {!Array<!proto.envoy.api.v2.core.DataSource>} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setSignedCertificateTimestampList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.envoy.api.v2.core.DataSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.addSignedCertificateTimestamp = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.envoy.api.v2.core.DataSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearSignedCertificateTimestampList = function() {
  return this.setSignedCertificateTimestampList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.TlsSessionTicketKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.toObject = function(includeInstance, msg) {
  var f, obj = {
    keysList: jspb.Message.toObjectList(msg.getKeysList(),
    envoy_api_v2_core_base_pb.DataSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.TlsSessionTicketKeys}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.TlsSessionTicketKeys;
  return proto.envoy.api.v2.auth.TlsSessionTicketKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.TlsSessionTicketKeys}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.TlsSessionTicketKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
};


/**
 * repeated envoy.api.v2.core.DataSource keys = 1;
 * @return {!Array<!proto.envoy.api.v2.core.DataSource>}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.getKeysList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.core.DataSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 1));
};


/**
 * @param {!Array<!proto.envoy.api.v2.core.DataSource>} value
 * @return {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} returns this
*/
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.setKeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.api.v2.core.DataSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.addKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.api.v2.core.DataSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} returns this
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.api.v2.auth.CertificateValidationContext.repeatedFields_ = [3,2,4,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.CertificateValidationContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.CertificateValidationContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.CertificateValidationContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    trustedCa: (f = msg.getTrustedCa()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    verifyCertificateSpkiList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    verifyCertificateHashList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    verifySubjectAltNameList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    matchSubjectAltNamesList: jspb.Message.toObjectList(msg.getMatchSubjectAltNamesList(),
    envoy_type_matcher_string_pb.StringMatcher.toObject, includeInstance),
    requireOcspStaple: (f = msg.getRequireOcspStaple()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    requireSignedCertificateTimestamp: (f = msg.getRequireSignedCertificateTimestamp()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    crl: (f = msg.getCrl()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    allowExpiredCertificate: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    trustChainVerification: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.CertificateValidationContext;
  return proto.envoy.api.v2.auth.CertificateValidationContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.CertificateValidationContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setTrustedCa(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addVerifyCertificateSpki(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addVerifyCertificateHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addVerifySubjectAltName(value);
      break;
    case 9:
      var value = new envoy_type_matcher_string_pb.StringMatcher;
      reader.readMessage(value,envoy_type_matcher_string_pb.StringMatcher.deserializeBinaryFromReader);
      msg.addMatchSubjectAltNames(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setRequireOcspStaple(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setRequireSignedCertificateTimestamp(value);
      break;
    case 7:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setCrl(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowExpiredCertificate(value);
      break;
    case 10:
      var value = /** @type {!proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification} */ (reader.readEnum());
      msg.setTrustChainVerification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.CertificateValidationContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.CertificateValidationContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.CertificateValidationContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrustedCa();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getVerifyCertificateSpkiList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getVerifyCertificateHashList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getVerifySubjectAltNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getMatchSubjectAltNamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      envoy_type_matcher_string_pb.StringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getRequireOcspStaple();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getRequireSignedCertificateTimestamp();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getCrl();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getAllowExpiredCertificate();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getTrustChainVerification();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification = {
  VERIFY_TRUST_CHAIN: 0,
  ACCEPT_UNTRUSTED: 1
};

/**
 * optional envoy.api.v2.core.DataSource trusted_ca = 1;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getTrustedCa = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 1));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setTrustedCa = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearTrustedCa = function() {
  return this.setTrustedCa(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.hasTrustedCa = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string verify_certificate_spki = 3;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getVerifyCertificateSpkiList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setVerifyCertificateSpkiList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.addVerifyCertificateSpki = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearVerifyCertificateSpkiList = function() {
  return this.setVerifyCertificateSpkiList([]);
};


/**
 * repeated string verify_certificate_hash = 2;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getVerifyCertificateHashList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setVerifyCertificateHashList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.addVerifyCertificateHash = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearVerifyCertificateHashList = function() {
  return this.setVerifyCertificateHashList([]);
};


/**
 * repeated string verify_subject_alt_name = 4;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getVerifySubjectAltNameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setVerifySubjectAltNameList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.addVerifySubjectAltName = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearVerifySubjectAltNameList = function() {
  return this.setVerifySubjectAltNameList([]);
};


/**
 * repeated envoy.type.matcher.StringMatcher match_subject_alt_names = 9;
 * @return {!Array<!proto.envoy.type.matcher.StringMatcher>}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getMatchSubjectAltNamesList = function() {
  return /** @type{!Array<!proto.envoy.type.matcher.StringMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_type_matcher_string_pb.StringMatcher, 9));
};


/**
 * @param {!Array<!proto.envoy.type.matcher.StringMatcher>} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setMatchSubjectAltNamesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.envoy.type.matcher.StringMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.type.matcher.StringMatcher}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.addMatchSubjectAltNames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.envoy.type.matcher.StringMatcher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearMatchSubjectAltNamesList = function() {
  return this.setMatchSubjectAltNamesList([]);
};


/**
 * optional google.protobuf.BoolValue require_ocsp_staple = 5;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getRequireOcspStaple = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 5));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setRequireOcspStaple = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearRequireOcspStaple = function() {
  return this.setRequireOcspStaple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.hasRequireOcspStaple = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.BoolValue require_signed_certificate_timestamp = 6;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getRequireSignedCertificateTimestamp = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 6));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setRequireSignedCertificateTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearRequireSignedCertificateTimestamp = function() {
  return this.setRequireSignedCertificateTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.hasRequireSignedCertificateTimestamp = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional envoy.api.v2.core.DataSource crl = 7;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getCrl = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 7));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setCrl = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearCrl = function() {
  return this.setCrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.hasCrl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool allow_expired_certificate = 8;
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getAllowExpiredCertificate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setAllowExpiredCertificate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional TrustChainVerification trust_chain_verification = 10;
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getTrustChainVerification = function() {
  return /** @type {!proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setTrustChainVerification = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.api.v2.auth.CommonTlsContext.repeatedFields_ = [2,6,4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.api.v2.auth.CommonTlsContext.oneofGroups_ = [[3,7,8]];

/**
 * @enum {number}
 */
proto.envoy.api.v2.auth.CommonTlsContext.ValidationContextTypeCase = {
  VALIDATION_CONTEXT_TYPE_NOT_SET: 0,
  VALIDATION_CONTEXT: 3,
  VALIDATION_CONTEXT_SDS_SECRET_CONFIG: 7,
  COMBINED_VALIDATION_CONTEXT: 8
};

/**
 * @return {proto.envoy.api.v2.auth.CommonTlsContext.ValidationContextTypeCase}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.getValidationContextTypeCase = function() {
  return /** @type {proto.envoy.api.v2.auth.CommonTlsContext.ValidationContextTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.api.v2.auth.CommonTlsContext.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.CommonTlsContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.CommonTlsContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.CommonTlsContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    tlsParams: (f = msg.getTlsParams()) && proto.envoy.api.v2.auth.TlsParameters.toObject(includeInstance, f),
    tlsCertificatesList: jspb.Message.toObjectList(msg.getTlsCertificatesList(),
    proto.envoy.api.v2.auth.TlsCertificate.toObject, includeInstance),
    tlsCertificateSdsSecretConfigsList: jspb.Message.toObjectList(msg.getTlsCertificateSdsSecretConfigsList(),
    proto.envoy.api.v2.auth.SdsSecretConfig.toObject, includeInstance),
    validationContext: (f = msg.getValidationContext()) && proto.envoy.api.v2.auth.CertificateValidationContext.toObject(includeInstance, f),
    validationContextSdsSecretConfig: (f = msg.getValidationContextSdsSecretConfig()) && proto.envoy.api.v2.auth.SdsSecretConfig.toObject(includeInstance, f),
    combinedValidationContext: (f = msg.getCombinedValidationContext()) && proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.toObject(includeInstance, f),
    alpnProtocolsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext}
 */
proto.envoy.api.v2.auth.CommonTlsContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.CommonTlsContext;
  return proto.envoy.api.v2.auth.CommonTlsContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.CommonTlsContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext}
 */
proto.envoy.api.v2.auth.CommonTlsContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.api.v2.auth.TlsParameters;
      reader.readMessage(value,proto.envoy.api.v2.auth.TlsParameters.deserializeBinaryFromReader);
      msg.setTlsParams(value);
      break;
    case 2:
      var value = new proto.envoy.api.v2.auth.TlsCertificate;
      reader.readMessage(value,proto.envoy.api.v2.auth.TlsCertificate.deserializeBinaryFromReader);
      msg.addTlsCertificates(value);
      break;
    case 6:
      var value = new proto.envoy.api.v2.auth.SdsSecretConfig;
      reader.readMessage(value,proto.envoy.api.v2.auth.SdsSecretConfig.deserializeBinaryFromReader);
      msg.addTlsCertificateSdsSecretConfigs(value);
      break;
    case 3:
      var value = new proto.envoy.api.v2.auth.CertificateValidationContext;
      reader.readMessage(value,proto.envoy.api.v2.auth.CertificateValidationContext.deserializeBinaryFromReader);
      msg.setValidationContext(value);
      break;
    case 7:
      var value = new proto.envoy.api.v2.auth.SdsSecretConfig;
      reader.readMessage(value,proto.envoy.api.v2.auth.SdsSecretConfig.deserializeBinaryFromReader);
      msg.setValidationContextSdsSecretConfig(value);
      break;
    case 8:
      var value = new proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext;
      reader.readMessage(value,proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.deserializeBinaryFromReader);
      msg.setCombinedValidationContext(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addAlpnProtocols(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.CommonTlsContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.CommonTlsContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.CommonTlsContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTlsParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.api.v2.auth.TlsParameters.serializeBinaryToWriter
    );
  }
  f = message.getTlsCertificatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.envoy.api.v2.auth.TlsCertificate.serializeBinaryToWriter
    );
  }
  f = message.getTlsCertificateSdsSecretConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.envoy.api.v2.auth.SdsSecretConfig.serializeBinaryToWriter
    );
  }
  f = message.getValidationContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.api.v2.auth.CertificateValidationContext.serializeBinaryToWriter
    );
  }
  f = message.getValidationContextSdsSecretConfig();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.api.v2.auth.SdsSecretConfig.serializeBinaryToWriter
    );
  }
  f = message.getCombinedValidationContext();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.serializeBinaryToWriter
    );
  }
  f = message.getAlpnProtocolsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultValidationContext: (f = msg.getDefaultValidationContext()) && proto.envoy.api.v2.auth.CertificateValidationContext.toObject(includeInstance, f),
    validationContextSdsSecretConfig: (f = msg.getValidationContextSdsSecretConfig()) && proto.envoy.api.v2.auth.SdsSecretConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext}
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext;
  return proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext}
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.api.v2.auth.CertificateValidationContext;
      reader.readMessage(value,proto.envoy.api.v2.auth.CertificateValidationContext.deserializeBinaryFromReader);
      msg.setDefaultValidationContext(value);
      break;
    case 2:
      var value = new proto.envoy.api.v2.auth.SdsSecretConfig;
      reader.readMessage(value,proto.envoy.api.v2.auth.SdsSecretConfig.deserializeBinaryFromReader);
      msg.setValidationContextSdsSecretConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultValidationContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.api.v2.auth.CertificateValidationContext.serializeBinaryToWriter
    );
  }
  f = message.getValidationContextSdsSecretConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.api.v2.auth.SdsSecretConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional CertificateValidationContext default_validation_context = 1;
 * @return {?proto.envoy.api.v2.auth.CertificateValidationContext}
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.getDefaultValidationContext = function() {
  return /** @type{?proto.envoy.api.v2.auth.CertificateValidationContext} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.CertificateValidationContext, 1));
};


/**
 * @param {?proto.envoy.api.v2.auth.CertificateValidationContext|undefined} value
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.setDefaultValidationContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.clearDefaultValidationContext = function() {
  return this.setDefaultValidationContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.hasDefaultValidationContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SdsSecretConfig validation_context_sds_secret_config = 2;
 * @return {?proto.envoy.api.v2.auth.SdsSecretConfig}
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.getValidationContextSdsSecretConfig = function() {
  return /** @type{?proto.envoy.api.v2.auth.SdsSecretConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.SdsSecretConfig, 2));
};


/**
 * @param {?proto.envoy.api.v2.auth.SdsSecretConfig|undefined} value
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.setValidationContextSdsSecretConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.clearValidationContextSdsSecretConfig = function() {
  return this.setValidationContextSdsSecretConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext.prototype.hasValidationContextSdsSecretConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TlsParameters tls_params = 1;
 * @return {?proto.envoy.api.v2.auth.TlsParameters}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.getTlsParams = function() {
  return /** @type{?proto.envoy.api.v2.auth.TlsParameters} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.TlsParameters, 1));
};


/**
 * @param {?proto.envoy.api.v2.auth.TlsParameters|undefined} value
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
*/
proto.envoy.api.v2.auth.CommonTlsContext.prototype.setTlsParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.clearTlsParams = function() {
  return this.setTlsParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.hasTlsParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TlsCertificate tls_certificates = 2;
 * @return {!Array<!proto.envoy.api.v2.auth.TlsCertificate>}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.getTlsCertificatesList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.auth.TlsCertificate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.api.v2.auth.TlsCertificate, 2));
};


/**
 * @param {!Array<!proto.envoy.api.v2.auth.TlsCertificate>} value
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
*/
proto.envoy.api.v2.auth.CommonTlsContext.prototype.setTlsCertificatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.api.v2.auth.TlsCertificate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.TlsCertificate}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.addTlsCertificates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.api.v2.auth.TlsCertificate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.clearTlsCertificatesList = function() {
  return this.setTlsCertificatesList([]);
};


/**
 * repeated SdsSecretConfig tls_certificate_sds_secret_configs = 6;
 * @return {!Array<!proto.envoy.api.v2.auth.SdsSecretConfig>}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.getTlsCertificateSdsSecretConfigsList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.auth.SdsSecretConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.api.v2.auth.SdsSecretConfig, 6));
};


/**
 * @param {!Array<!proto.envoy.api.v2.auth.SdsSecretConfig>} value
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
*/
proto.envoy.api.v2.auth.CommonTlsContext.prototype.setTlsCertificateSdsSecretConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.envoy.api.v2.auth.SdsSecretConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.SdsSecretConfig}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.addTlsCertificateSdsSecretConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.envoy.api.v2.auth.SdsSecretConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.clearTlsCertificateSdsSecretConfigsList = function() {
  return this.setTlsCertificateSdsSecretConfigsList([]);
};


/**
 * optional CertificateValidationContext validation_context = 3;
 * @return {?proto.envoy.api.v2.auth.CertificateValidationContext}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.getValidationContext = function() {
  return /** @type{?proto.envoy.api.v2.auth.CertificateValidationContext} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.CertificateValidationContext, 3));
};


/**
 * @param {?proto.envoy.api.v2.auth.CertificateValidationContext|undefined} value
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
*/
proto.envoy.api.v2.auth.CommonTlsContext.prototype.setValidationContext = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.api.v2.auth.CommonTlsContext.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.clearValidationContext = function() {
  return this.setValidationContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.hasValidationContext = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SdsSecretConfig validation_context_sds_secret_config = 7;
 * @return {?proto.envoy.api.v2.auth.SdsSecretConfig}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.getValidationContextSdsSecretConfig = function() {
  return /** @type{?proto.envoy.api.v2.auth.SdsSecretConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.SdsSecretConfig, 7));
};


/**
 * @param {?proto.envoy.api.v2.auth.SdsSecretConfig|undefined} value
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
*/
proto.envoy.api.v2.auth.CommonTlsContext.prototype.setValidationContextSdsSecretConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.envoy.api.v2.auth.CommonTlsContext.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.clearValidationContextSdsSecretConfig = function() {
  return this.setValidationContextSdsSecretConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.hasValidationContextSdsSecretConfig = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional CombinedCertificateValidationContext combined_validation_context = 8;
 * @return {?proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.getCombinedValidationContext = function() {
  return /** @type{?proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext, 8));
};


/**
 * @param {?proto.envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext|undefined} value
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
*/
proto.envoy.api.v2.auth.CommonTlsContext.prototype.setCombinedValidationContext = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.envoy.api.v2.auth.CommonTlsContext.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.clearCombinedValidationContext = function() {
  return this.setCombinedValidationContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.hasCombinedValidationContext = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated string alpn_protocols = 4;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.getAlpnProtocolsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.setAlpnProtocolsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.addAlpnProtocols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CommonTlsContext} returns this
 */
proto.envoy.api.v2.auth.CommonTlsContext.prototype.clearAlpnProtocolsList = function() {
  return this.setAlpnProtocolsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.UpstreamTlsContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.UpstreamTlsContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonTlsContext: (f = msg.getCommonTlsContext()) && proto.envoy.api.v2.auth.CommonTlsContext.toObject(includeInstance, f),
    sni: jspb.Message.getFieldWithDefault(msg, 2, ""),
    allowRenegotiation: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    maxSessionKeys: (f = msg.getMaxSessionKeys()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.UpstreamTlsContext}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.UpstreamTlsContext;
  return proto.envoy.api.v2.auth.UpstreamTlsContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.UpstreamTlsContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.UpstreamTlsContext}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.api.v2.auth.CommonTlsContext;
      reader.readMessage(value,proto.envoy.api.v2.auth.CommonTlsContext.deserializeBinaryFromReader);
      msg.setCommonTlsContext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSni(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowRenegotiation(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxSessionKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.UpstreamTlsContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.UpstreamTlsContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonTlsContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.api.v2.auth.CommonTlsContext.serializeBinaryToWriter
    );
  }
  f = message.getSni();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAllowRenegotiation();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMaxSessionKeys();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonTlsContext common_tls_context = 1;
 * @return {?proto.envoy.api.v2.auth.CommonTlsContext}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.getCommonTlsContext = function() {
  return /** @type{?proto.envoy.api.v2.auth.CommonTlsContext} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.CommonTlsContext, 1));
};


/**
 * @param {?proto.envoy.api.v2.auth.CommonTlsContext|undefined} value
 * @return {!proto.envoy.api.v2.auth.UpstreamTlsContext} returns this
*/
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.setCommonTlsContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.UpstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.clearCommonTlsContext = function() {
  return this.setCommonTlsContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.hasCommonTlsContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string sni = 2;
 * @return {string}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.getSni = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.api.v2.auth.UpstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.setSni = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool allow_renegotiation = 3;
 * @return {boolean}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.getAllowRenegotiation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.api.v2.auth.UpstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.setAllowRenegotiation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional google.protobuf.UInt32Value max_session_keys = 4;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.getMaxSessionKeys = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 4));
};


/**
 * @param {?proto.google.protobuf.UInt32Value|undefined} value
 * @return {!proto.envoy.api.v2.auth.UpstreamTlsContext} returns this
*/
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.setMaxSessionKeys = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.UpstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.clearMaxSessionKeys = function() {
  return this.setMaxSessionKeys(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.UpstreamTlsContext.prototype.hasMaxSessionKeys = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.oneofGroups_ = [[4,5,7]];

/**
 * @enum {number}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.SessionTicketKeysTypeCase = {
  SESSION_TICKET_KEYS_TYPE_NOT_SET: 0,
  SESSION_TICKET_KEYS: 4,
  SESSION_TICKET_KEYS_SDS_SECRET_CONFIG: 5,
  DISABLE_STATELESS_SESSION_RESUMPTION: 7
};

/**
 * @return {proto.envoy.api.v2.auth.DownstreamTlsContext.SessionTicketKeysTypeCase}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.getSessionTicketKeysTypeCase = function() {
  return /** @type {proto.envoy.api.v2.auth.DownstreamTlsContext.SessionTicketKeysTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.api.v2.auth.DownstreamTlsContext.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.DownstreamTlsContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.DownstreamTlsContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonTlsContext: (f = msg.getCommonTlsContext()) && proto.envoy.api.v2.auth.CommonTlsContext.toObject(includeInstance, f),
    requireClientCertificate: (f = msg.getRequireClientCertificate()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    requireSni: (f = msg.getRequireSni()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    sessionTicketKeys: (f = msg.getSessionTicketKeys()) && proto.envoy.api.v2.auth.TlsSessionTicketKeys.toObject(includeInstance, f),
    sessionTicketKeysSdsSecretConfig: (f = msg.getSessionTicketKeysSdsSecretConfig()) && proto.envoy.api.v2.auth.SdsSecretConfig.toObject(includeInstance, f),
    disableStatelessSessionResumption: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    sessionTimeout: (f = msg.getSessionTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.DownstreamTlsContext;
  return proto.envoy.api.v2.auth.DownstreamTlsContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.DownstreamTlsContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.api.v2.auth.CommonTlsContext;
      reader.readMessage(value,proto.envoy.api.v2.auth.CommonTlsContext.deserializeBinaryFromReader);
      msg.setCommonTlsContext(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setRequireClientCertificate(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setRequireSni(value);
      break;
    case 4:
      var value = new proto.envoy.api.v2.auth.TlsSessionTicketKeys;
      reader.readMessage(value,proto.envoy.api.v2.auth.TlsSessionTicketKeys.deserializeBinaryFromReader);
      msg.setSessionTicketKeys(value);
      break;
    case 5:
      var value = new proto.envoy.api.v2.auth.SdsSecretConfig;
      reader.readMessage(value,proto.envoy.api.v2.auth.SdsSecretConfig.deserializeBinaryFromReader);
      msg.setSessionTicketKeysSdsSecretConfig(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableStatelessSessionResumption(value);
      break;
    case 6:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setSessionTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.DownstreamTlsContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.DownstreamTlsContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonTlsContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.api.v2.auth.CommonTlsContext.serializeBinaryToWriter
    );
  }
  f = message.getRequireClientCertificate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getRequireSni();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getSessionTicketKeys();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.api.v2.auth.TlsSessionTicketKeys.serializeBinaryToWriter
    );
  }
  f = message.getSessionTicketKeysSdsSecretConfig();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.api.v2.auth.SdsSecretConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSessionTimeout();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonTlsContext common_tls_context = 1;
 * @return {?proto.envoy.api.v2.auth.CommonTlsContext}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.getCommonTlsContext = function() {
  return /** @type{?proto.envoy.api.v2.auth.CommonTlsContext} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.CommonTlsContext, 1));
};


/**
 * @param {?proto.envoy.api.v2.auth.CommonTlsContext|undefined} value
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
*/
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.setCommonTlsContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.clearCommonTlsContext = function() {
  return this.setCommonTlsContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.hasCommonTlsContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.BoolValue require_client_certificate = 2;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.getRequireClientCertificate = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 2));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
*/
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.setRequireClientCertificate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.clearRequireClientCertificate = function() {
  return this.setRequireClientCertificate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.hasRequireClientCertificate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.BoolValue require_sni = 3;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.getRequireSni = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 3));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
*/
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.setRequireSni = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.clearRequireSni = function() {
  return this.setRequireSni(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.hasRequireSni = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TlsSessionTicketKeys session_ticket_keys = 4;
 * @return {?proto.envoy.api.v2.auth.TlsSessionTicketKeys}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.getSessionTicketKeys = function() {
  return /** @type{?proto.envoy.api.v2.auth.TlsSessionTicketKeys} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.TlsSessionTicketKeys, 4));
};


/**
 * @param {?proto.envoy.api.v2.auth.TlsSessionTicketKeys|undefined} value
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
*/
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.setSessionTicketKeys = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.envoy.api.v2.auth.DownstreamTlsContext.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.clearSessionTicketKeys = function() {
  return this.setSessionTicketKeys(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.hasSessionTicketKeys = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SdsSecretConfig session_ticket_keys_sds_secret_config = 5;
 * @return {?proto.envoy.api.v2.auth.SdsSecretConfig}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.getSessionTicketKeysSdsSecretConfig = function() {
  return /** @type{?proto.envoy.api.v2.auth.SdsSecretConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.SdsSecretConfig, 5));
};


/**
 * @param {?proto.envoy.api.v2.auth.SdsSecretConfig|undefined} value
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
*/
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.setSessionTicketKeysSdsSecretConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.envoy.api.v2.auth.DownstreamTlsContext.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.clearSessionTicketKeysSdsSecretConfig = function() {
  return this.setSessionTicketKeysSdsSecretConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.hasSessionTicketKeysSdsSecretConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool disable_stateless_session_resumption = 7;
 * @return {boolean}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.getDisableStatelessSessionResumption = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.setDisableStatelessSessionResumption = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.envoy.api.v2.auth.DownstreamTlsContext.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.clearDisableStatelessSessionResumption = function() {
  return jspb.Message.setOneofField(this, 7, proto.envoy.api.v2.auth.DownstreamTlsContext.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.hasDisableStatelessSessionResumption = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Duration session_timeout = 6;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.getSessionTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 6));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
*/
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.setSessionTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.DownstreamTlsContext} returns this
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.clearSessionTimeout = function() {
  return this.setSessionTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.DownstreamTlsContext.prototype.hasSessionTimeout = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.GenericSecret.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.GenericSecret.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.GenericSecret} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.GenericSecret.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: (f = msg.getSecret()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.GenericSecret}
 */
proto.envoy.api.v2.auth.GenericSecret.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.GenericSecret;
  return proto.envoy.api.v2.auth.GenericSecret.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.GenericSecret} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.GenericSecret}
 */
proto.envoy.api.v2.auth.GenericSecret.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.GenericSecret.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.GenericSecret.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.GenericSecret} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.GenericSecret.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.api.v2.core.DataSource secret = 1;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.GenericSecret.prototype.getSecret = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 1));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.GenericSecret} returns this
*/
proto.envoy.api.v2.auth.GenericSecret.prototype.setSecret = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.GenericSecret} returns this
 */
proto.envoy.api.v2.auth.GenericSecret.prototype.clearSecret = function() {
  return this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.GenericSecret.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.SdsSecretConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.SdsSecretConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.SdsSecretConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.SdsSecretConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sdsConfig: (f = msg.getSdsConfig()) && envoy_api_v2_core_config_source_pb.ConfigSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.SdsSecretConfig}
 */
proto.envoy.api.v2.auth.SdsSecretConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.SdsSecretConfig;
  return proto.envoy.api.v2.auth.SdsSecretConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.SdsSecretConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.SdsSecretConfig}
 */
proto.envoy.api.v2.auth.SdsSecretConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new envoy_api_v2_core_config_source_pb.ConfigSource;
      reader.readMessage(value,envoy_api_v2_core_config_source_pb.ConfigSource.deserializeBinaryFromReader);
      msg.setSdsConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.SdsSecretConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.SdsSecretConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.SdsSecretConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.SdsSecretConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSdsConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      envoy_api_v2_core_config_source_pb.ConfigSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.api.v2.auth.SdsSecretConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.api.v2.auth.SdsSecretConfig} returns this
 */
proto.envoy.api.v2.auth.SdsSecretConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional envoy.api.v2.core.ConfigSource sds_config = 2;
 * @return {?proto.envoy.api.v2.core.ConfigSource}
 */
proto.envoy.api.v2.auth.SdsSecretConfig.prototype.getSdsConfig = function() {
  return /** @type{?proto.envoy.api.v2.core.ConfigSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_config_source_pb.ConfigSource, 2));
};


/**
 * @param {?proto.envoy.api.v2.core.ConfigSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.SdsSecretConfig} returns this
*/
proto.envoy.api.v2.auth.SdsSecretConfig.prototype.setSdsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.SdsSecretConfig} returns this
 */
proto.envoy.api.v2.auth.SdsSecretConfig.prototype.clearSdsConfig = function() {
  return this.setSdsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.SdsSecretConfig.prototype.hasSdsConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.api.v2.auth.Secret.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.envoy.api.v2.auth.Secret.TypeCase = {
  TYPE_NOT_SET: 0,
  TLS_CERTIFICATE: 2,
  SESSION_TICKET_KEYS: 3,
  VALIDATION_CONTEXT: 4,
  GENERIC_SECRET: 5
};

/**
 * @return {proto.envoy.api.v2.auth.Secret.TypeCase}
 */
proto.envoy.api.v2.auth.Secret.prototype.getTypeCase = function() {
  return /** @type {proto.envoy.api.v2.auth.Secret.TypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.api.v2.auth.Secret.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.Secret.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.Secret.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.Secret} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.Secret.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tlsCertificate: (f = msg.getTlsCertificate()) && proto.envoy.api.v2.auth.TlsCertificate.toObject(includeInstance, f),
    sessionTicketKeys: (f = msg.getSessionTicketKeys()) && proto.envoy.api.v2.auth.TlsSessionTicketKeys.toObject(includeInstance, f),
    validationContext: (f = msg.getValidationContext()) && proto.envoy.api.v2.auth.CertificateValidationContext.toObject(includeInstance, f),
    genericSecret: (f = msg.getGenericSecret()) && proto.envoy.api.v2.auth.GenericSecret.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.Secret}
 */
proto.envoy.api.v2.auth.Secret.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.Secret;
  return proto.envoy.api.v2.auth.Secret.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.Secret} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.Secret}
 */
proto.envoy.api.v2.auth.Secret.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.envoy.api.v2.auth.TlsCertificate;
      reader.readMessage(value,proto.envoy.api.v2.auth.TlsCertificate.deserializeBinaryFromReader);
      msg.setTlsCertificate(value);
      break;
    case 3:
      var value = new proto.envoy.api.v2.auth.TlsSessionTicketKeys;
      reader.readMessage(value,proto.envoy.api.v2.auth.TlsSessionTicketKeys.deserializeBinaryFromReader);
      msg.setSessionTicketKeys(value);
      break;
    case 4:
      var value = new proto.envoy.api.v2.auth.CertificateValidationContext;
      reader.readMessage(value,proto.envoy.api.v2.auth.CertificateValidationContext.deserializeBinaryFromReader);
      msg.setValidationContext(value);
      break;
    case 5:
      var value = new proto.envoy.api.v2.auth.GenericSecret;
      reader.readMessage(value,proto.envoy.api.v2.auth.GenericSecret.deserializeBinaryFromReader);
      msg.setGenericSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.Secret.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.Secret.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.Secret} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.Secret.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTlsCertificate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.api.v2.auth.TlsCertificate.serializeBinaryToWriter
    );
  }
  f = message.getSessionTicketKeys();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.api.v2.auth.TlsSessionTicketKeys.serializeBinaryToWriter
    );
  }
  f = message.getValidationContext();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.envoy.api.v2.auth.CertificateValidationContext.serializeBinaryToWriter
    );
  }
  f = message.getGenericSecret();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.api.v2.auth.GenericSecret.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.api.v2.auth.Secret.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.api.v2.auth.Secret} returns this
 */
proto.envoy.api.v2.auth.Secret.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TlsCertificate tls_certificate = 2;
 * @return {?proto.envoy.api.v2.auth.TlsCertificate}
 */
proto.envoy.api.v2.auth.Secret.prototype.getTlsCertificate = function() {
  return /** @type{?proto.envoy.api.v2.auth.TlsCertificate} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.TlsCertificate, 2));
};


/**
 * @param {?proto.envoy.api.v2.auth.TlsCertificate|undefined} value
 * @return {!proto.envoy.api.v2.auth.Secret} returns this
*/
proto.envoy.api.v2.auth.Secret.prototype.setTlsCertificate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.api.v2.auth.Secret.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.Secret} returns this
 */
proto.envoy.api.v2.auth.Secret.prototype.clearTlsCertificate = function() {
  return this.setTlsCertificate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.Secret.prototype.hasTlsCertificate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TlsSessionTicketKeys session_ticket_keys = 3;
 * @return {?proto.envoy.api.v2.auth.TlsSessionTicketKeys}
 */
proto.envoy.api.v2.auth.Secret.prototype.getSessionTicketKeys = function() {
  return /** @type{?proto.envoy.api.v2.auth.TlsSessionTicketKeys} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.TlsSessionTicketKeys, 3));
};


/**
 * @param {?proto.envoy.api.v2.auth.TlsSessionTicketKeys|undefined} value
 * @return {!proto.envoy.api.v2.auth.Secret} returns this
*/
proto.envoy.api.v2.auth.Secret.prototype.setSessionTicketKeys = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.api.v2.auth.Secret.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.Secret} returns this
 */
proto.envoy.api.v2.auth.Secret.prototype.clearSessionTicketKeys = function() {
  return this.setSessionTicketKeys(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.Secret.prototype.hasSessionTicketKeys = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CertificateValidationContext validation_context = 4;
 * @return {?proto.envoy.api.v2.auth.CertificateValidationContext}
 */
proto.envoy.api.v2.auth.Secret.prototype.getValidationContext = function() {
  return /** @type{?proto.envoy.api.v2.auth.CertificateValidationContext} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.CertificateValidationContext, 4));
};


/**
 * @param {?proto.envoy.api.v2.auth.CertificateValidationContext|undefined} value
 * @return {!proto.envoy.api.v2.auth.Secret} returns this
*/
proto.envoy.api.v2.auth.Secret.prototype.setValidationContext = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.envoy.api.v2.auth.Secret.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.Secret} returns this
 */
proto.envoy.api.v2.auth.Secret.prototype.clearValidationContext = function() {
  return this.setValidationContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.Secret.prototype.hasValidationContext = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GenericSecret generic_secret = 5;
 * @return {?proto.envoy.api.v2.auth.GenericSecret}
 */
proto.envoy.api.v2.auth.Secret.prototype.getGenericSecret = function() {
  return /** @type{?proto.envoy.api.v2.auth.GenericSecret} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.GenericSecret, 5));
};


/**
 * @param {?proto.envoy.api.v2.auth.GenericSecret|undefined} value
 * @return {!proto.envoy.api.v2.auth.Secret} returns this
*/
proto.envoy.api.v2.auth.Secret.prototype.setGenericSecret = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.envoy.api.v2.auth.Secret.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.Secret} returns this
 */
proto.envoy.api.v2.auth.Secret.prototype.clearGenericSecret = function() {
  return this.setGenericSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.Secret.prototype.hasGenericSecret = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.envoy.api.v2.auth);
