// source: envoy/api/v2/auth/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_api_v2_core_base_pb = require('../../../../envoy/api/v2/core/base_pb.js');
goog.object.extend(proto, envoy_api_v2_core_base_pb);
var envoy_type_matcher_string_pb = require('../../../../envoy/type/matcher/string_pb.js');
goog.object.extend(proto, envoy_type_matcher_string_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var udpa_annotations_migrate_pb = require('../../../../udpa/annotations/migrate_pb.js');
goog.object.extend(proto, udpa_annotations_migrate_pb);
var udpa_annotations_sensitive_pb = require('../../../../udpa/annotations/sensitive_pb.js');
goog.object.extend(proto, udpa_annotations_sensitive_pb);
var udpa_annotations_status_pb = require('../../../../udpa/annotations/status_pb.js');
goog.object.extend(proto, udpa_annotations_status_pb);
var validate_validate_pb = require('../../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.envoy.api.v2.auth.CertificateValidationContext', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.PrivateKeyProvider', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.PrivateKeyProvider.ConfigTypeCase', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.TlsCertificate', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.TlsParameters', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.TlsParameters.TlsProtocol', null, global);
goog.exportSymbol('proto.envoy.api.v2.auth.TlsSessionTicketKeys', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.TlsParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.api.v2.auth.TlsParameters.repeatedFields_, null);
};
goog.inherits(proto.envoy.api.v2.auth.TlsParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.TlsParameters.displayName = 'proto.envoy.api.v2.auth.TlsParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.PrivateKeyProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_);
};
goog.inherits(proto.envoy.api.v2.auth.PrivateKeyProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.PrivateKeyProvider.displayName = 'proto.envoy.api.v2.auth.PrivateKeyProvider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.TlsCertificate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.api.v2.auth.TlsCertificate.repeatedFields_, null);
};
goog.inherits(proto.envoy.api.v2.auth.TlsCertificate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.TlsCertificate.displayName = 'proto.envoy.api.v2.auth.TlsCertificate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.api.v2.auth.TlsSessionTicketKeys.repeatedFields_, null);
};
goog.inherits(proto.envoy.api.v2.auth.TlsSessionTicketKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.TlsSessionTicketKeys.displayName = 'proto.envoy.api.v2.auth.TlsSessionTicketKeys';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.api.v2.auth.CertificateValidationContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.api.v2.auth.CertificateValidationContext.repeatedFields_, null);
};
goog.inherits(proto.envoy.api.v2.auth.CertificateValidationContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.api.v2.auth.CertificateValidationContext.displayName = 'proto.envoy.api.v2.auth.CertificateValidationContext';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.api.v2.auth.TlsParameters.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.TlsParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.TlsParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    tlsMinimumProtocolVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tlsMaximumProtocolVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cipherSuitesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    ecdhCurvesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.TlsParameters}
 */
proto.envoy.api.v2.auth.TlsParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.TlsParameters;
  return proto.envoy.api.v2.auth.TlsParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.TlsParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.TlsParameters}
 */
proto.envoy.api.v2.auth.TlsParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} */ (reader.readEnum());
      msg.setTlsMinimumProtocolVersion(value);
      break;
    case 2:
      var value = /** @type {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} */ (reader.readEnum());
      msg.setTlsMaximumProtocolVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCipherSuites(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addEcdhCurves(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.TlsParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.TlsParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTlsMinimumProtocolVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTlsMaximumProtocolVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCipherSuitesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getEcdhCurvesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.api.v2.auth.TlsParameters.TlsProtocol = {
  TLS_AUTO: 0,
  TLSV1_0: 1,
  TLSV1_1: 2,
  TLSV1_2: 3,
  TLSV1_3: 4
};

/**
 * optional TlsProtocol tls_minimum_protocol_version = 1;
 * @return {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.getTlsMinimumProtocolVersion = function() {
  return /** @type {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} value
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.setTlsMinimumProtocolVersion = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional TlsProtocol tls_maximum_protocol_version = 2;
 * @return {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.getTlsMaximumProtocolVersion = function() {
  return /** @type {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.envoy.api.v2.auth.TlsParameters.TlsProtocol} value
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.setTlsMaximumProtocolVersion = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string cipher_suites = 3;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.getCipherSuitesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.setCipherSuitesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.addCipherSuites = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.clearCipherSuitesList = function() {
  return this.setCipherSuitesList([]);
};


/**
 * repeated string ecdh_curves = 4;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.getEcdhCurvesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.setEcdhCurvesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.addEcdhCurves = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.TlsParameters} returns this
 */
proto.envoy.api.v2.auth.TlsParameters.prototype.clearEcdhCurvesList = function() {
  return this.setEcdhCurvesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.ConfigTypeCase = {
  CONFIG_TYPE_NOT_SET: 0,
  CONFIG: 2,
  TYPED_CONFIG: 3
};

/**
 * @return {proto.envoy.api.v2.auth.PrivateKeyProvider.ConfigTypeCase}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.getConfigTypeCase = function() {
  return /** @type {proto.envoy.api.v2.auth.PrivateKeyProvider.ConfigTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.PrivateKeyProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.PrivateKeyProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    providerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    config: (f = msg.getConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    typedConfig: (f = msg.getTypedConfig()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.PrivateKeyProvider;
  return proto.envoy.api.v2.auth.PrivateKeyProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.PrivateKeyProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderName(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setTypedConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.PrivateKeyProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.PrivateKeyProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProviderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getTypedConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string provider_name = 1;
 * @return {string}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.getProviderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.setProviderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct config = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.getConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
*/
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.setConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Any typed_config = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.getTypedConfig = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
*/
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.setTypedConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.api.v2.auth.PrivateKeyProvider.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.PrivateKeyProvider} returns this
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.clearTypedConfig = function() {
  return this.setTypedConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.PrivateKeyProvider.prototype.hasTypedConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.api.v2.auth.TlsCertificate.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.TlsCertificate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.TlsCertificate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsCertificate.toObject = function(includeInstance, msg) {
  var f, obj = {
    certificateChain: (f = msg.getCertificateChain()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    privateKey: (f = msg.getPrivateKey()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    privateKeyProvider: (f = msg.getPrivateKeyProvider()) && proto.envoy.api.v2.auth.PrivateKeyProvider.toObject(includeInstance, f),
    password: (f = msg.getPassword()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    ocspStaple: (f = msg.getOcspStaple()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    signedCertificateTimestampList: jspb.Message.toObjectList(msg.getSignedCertificateTimestampList(),
    envoy_api_v2_core_base_pb.DataSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate}
 */
proto.envoy.api.v2.auth.TlsCertificate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.TlsCertificate;
  return proto.envoy.api.v2.auth.TlsCertificate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.TlsCertificate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate}
 */
proto.envoy.api.v2.auth.TlsCertificate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setCertificateChain(value);
      break;
    case 2:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setPrivateKey(value);
      break;
    case 6:
      var value = new proto.envoy.api.v2.auth.PrivateKeyProvider;
      reader.readMessage(value,proto.envoy.api.v2.auth.PrivateKeyProvider.deserializeBinaryFromReader);
      msg.setPrivateKeyProvider(value);
      break;
    case 3:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setPassword(value);
      break;
    case 4:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setOcspStaple(value);
      break;
    case 5:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.addSignedCertificateTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.TlsCertificate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.TlsCertificate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsCertificate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCertificateChain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getPrivateKey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getPrivateKeyProvider();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.api.v2.auth.PrivateKeyProvider.serializeBinaryToWriter
    );
  }
  f = message.getPassword();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getOcspStaple();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getSignedCertificateTimestampList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.api.v2.core.DataSource certificate_chain = 1;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getCertificateChain = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 1));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setCertificateChain = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearCertificateChain = function() {
  return this.setCertificateChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasCertificateChain = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.api.v2.core.DataSource private_key = 2;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getPrivateKey = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 2));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setPrivateKey = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearPrivateKey = function() {
  return this.setPrivateKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasPrivateKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PrivateKeyProvider private_key_provider = 6;
 * @return {?proto.envoy.api.v2.auth.PrivateKeyProvider}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getPrivateKeyProvider = function() {
  return /** @type{?proto.envoy.api.v2.auth.PrivateKeyProvider} */ (
    jspb.Message.getWrapperField(this, proto.envoy.api.v2.auth.PrivateKeyProvider, 6));
};


/**
 * @param {?proto.envoy.api.v2.auth.PrivateKeyProvider|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setPrivateKeyProvider = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearPrivateKeyProvider = function() {
  return this.setPrivateKeyProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasPrivateKeyProvider = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional envoy.api.v2.core.DataSource password = 3;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getPassword = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 3));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setPassword = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearPassword = function() {
  return this.setPassword(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.api.v2.core.DataSource ocsp_staple = 4;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getOcspStaple = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 4));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setOcspStaple = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearOcspStaple = function() {
  return this.setOcspStaple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.hasOcspStaple = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;
 * @return {!Array<!proto.envoy.api.v2.core.DataSource>}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.getSignedCertificateTimestampList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.core.DataSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 5));
};


/**
 * @param {!Array<!proto.envoy.api.v2.core.DataSource>} value
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
*/
proto.envoy.api.v2.auth.TlsCertificate.prototype.setSignedCertificateTimestampList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.envoy.api.v2.core.DataSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.addSignedCertificateTimestamp = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.envoy.api.v2.core.DataSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.TlsCertificate} returns this
 */
proto.envoy.api.v2.auth.TlsCertificate.prototype.clearSignedCertificateTimestampList = function() {
  return this.setSignedCertificateTimestampList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.TlsSessionTicketKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.toObject = function(includeInstance, msg) {
  var f, obj = {
    keysList: jspb.Message.toObjectList(msg.getKeysList(),
    envoy_api_v2_core_base_pb.DataSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.TlsSessionTicketKeys}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.TlsSessionTicketKeys;
  return proto.envoy.api.v2.auth.TlsSessionTicketKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.TlsSessionTicketKeys}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.TlsSessionTicketKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
};


/**
 * repeated envoy.api.v2.core.DataSource keys = 1;
 * @return {!Array<!proto.envoy.api.v2.core.DataSource>}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.getKeysList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.core.DataSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 1));
};


/**
 * @param {!Array<!proto.envoy.api.v2.core.DataSource>} value
 * @return {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} returns this
*/
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.setKeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.api.v2.core.DataSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.addKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.api.v2.core.DataSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.TlsSessionTicketKeys} returns this
 */
proto.envoy.api.v2.auth.TlsSessionTicketKeys.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.api.v2.auth.CertificateValidationContext.repeatedFields_ = [3,2,4,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.api.v2.auth.CertificateValidationContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.api.v2.auth.CertificateValidationContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.CertificateValidationContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    trustedCa: (f = msg.getTrustedCa()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    verifyCertificateSpkiList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    verifyCertificateHashList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    verifySubjectAltNameList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    matchSubjectAltNamesList: jspb.Message.toObjectList(msg.getMatchSubjectAltNamesList(),
    envoy_type_matcher_string_pb.StringMatcher.toObject, includeInstance),
    requireOcspStaple: (f = msg.getRequireOcspStaple()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    requireSignedCertificateTimestamp: (f = msg.getRequireSignedCertificateTimestamp()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    crl: (f = msg.getCrl()) && envoy_api_v2_core_base_pb.DataSource.toObject(includeInstance, f),
    allowExpiredCertificate: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    trustChainVerification: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.api.v2.auth.CertificateValidationContext;
  return proto.envoy.api.v2.auth.CertificateValidationContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.api.v2.auth.CertificateValidationContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setTrustedCa(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addVerifyCertificateSpki(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addVerifyCertificateHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addVerifySubjectAltName(value);
      break;
    case 9:
      var value = new envoy_type_matcher_string_pb.StringMatcher;
      reader.readMessage(value,envoy_type_matcher_string_pb.StringMatcher.deserializeBinaryFromReader);
      msg.addMatchSubjectAltNames(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setRequireOcspStaple(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setRequireSignedCertificateTimestamp(value);
      break;
    case 7:
      var value = new envoy_api_v2_core_base_pb.DataSource;
      reader.readMessage(value,envoy_api_v2_core_base_pb.DataSource.deserializeBinaryFromReader);
      msg.setCrl(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowExpiredCertificate(value);
      break;
    case 10:
      var value = /** @type {!proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification} */ (reader.readEnum());
      msg.setTrustChainVerification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.api.v2.auth.CertificateValidationContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.api.v2.auth.CertificateValidationContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.api.v2.auth.CertificateValidationContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrustedCa();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getVerifyCertificateSpkiList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getVerifyCertificateHashList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getVerifySubjectAltNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getMatchSubjectAltNamesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      envoy_type_matcher_string_pb.StringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getRequireOcspStaple();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getRequireSignedCertificateTimestamp();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getCrl();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      envoy_api_v2_core_base_pb.DataSource.serializeBinaryToWriter
    );
  }
  f = message.getAllowExpiredCertificate();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getTrustChainVerification();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification = {
  VERIFY_TRUST_CHAIN: 0,
  ACCEPT_UNTRUSTED: 1
};

/**
 * optional envoy.api.v2.core.DataSource trusted_ca = 1;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getTrustedCa = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 1));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setTrustedCa = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearTrustedCa = function() {
  return this.setTrustedCa(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.hasTrustedCa = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string verify_certificate_spki = 3;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getVerifyCertificateSpkiList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setVerifyCertificateSpkiList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.addVerifyCertificateSpki = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearVerifyCertificateSpkiList = function() {
  return this.setVerifyCertificateSpkiList([]);
};


/**
 * repeated string verify_certificate_hash = 2;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getVerifyCertificateHashList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setVerifyCertificateHashList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.addVerifyCertificateHash = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearVerifyCertificateHashList = function() {
  return this.setVerifyCertificateHashList([]);
};


/**
 * repeated string verify_subject_alt_name = 4;
 * @return {!Array<string>}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getVerifySubjectAltNameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setVerifySubjectAltNameList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.addVerifySubjectAltName = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearVerifySubjectAltNameList = function() {
  return this.setVerifySubjectAltNameList([]);
};


/**
 * repeated envoy.type.matcher.StringMatcher match_subject_alt_names = 9;
 * @return {!Array<!proto.envoy.type.matcher.StringMatcher>}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getMatchSubjectAltNamesList = function() {
  return /** @type{!Array<!proto.envoy.type.matcher.StringMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_type_matcher_string_pb.StringMatcher, 9));
};


/**
 * @param {!Array<!proto.envoy.type.matcher.StringMatcher>} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setMatchSubjectAltNamesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.envoy.type.matcher.StringMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.type.matcher.StringMatcher}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.addMatchSubjectAltNames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.envoy.type.matcher.StringMatcher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearMatchSubjectAltNamesList = function() {
  return this.setMatchSubjectAltNamesList([]);
};


/**
 * optional google.protobuf.BoolValue require_ocsp_staple = 5;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getRequireOcspStaple = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 5));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setRequireOcspStaple = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearRequireOcspStaple = function() {
  return this.setRequireOcspStaple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.hasRequireOcspStaple = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.BoolValue require_signed_certificate_timestamp = 6;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getRequireSignedCertificateTimestamp = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 6));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setRequireSignedCertificateTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearRequireSignedCertificateTimestamp = function() {
  return this.setRequireSignedCertificateTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.hasRequireSignedCertificateTimestamp = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional envoy.api.v2.core.DataSource crl = 7;
 * @return {?proto.envoy.api.v2.core.DataSource}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getCrl = function() {
  return /** @type{?proto.envoy.api.v2.core.DataSource} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_core_base_pb.DataSource, 7));
};


/**
 * @param {?proto.envoy.api.v2.core.DataSource|undefined} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
*/
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setCrl = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.clearCrl = function() {
  return this.setCrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.hasCrl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool allow_expired_certificate = 8;
 * @return {boolean}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getAllowExpiredCertificate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setAllowExpiredCertificate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional TrustChainVerification trust_chain_verification = 10;
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification}
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.getTrustChainVerification = function() {
  return /** @type {!proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.envoy.api.v2.auth.CertificateValidationContext.TrustChainVerification} value
 * @return {!proto.envoy.api.v2.auth.CertificateValidationContext} returns this
 */
proto.envoy.api.v2.auth.CertificateValidationContext.prototype.setTrustChainVerification = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


goog.object.extend(exports, proto.envoy.api.v2.auth);
