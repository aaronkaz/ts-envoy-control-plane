// source: envoy/extensions/filters/http/ext_authz/v3/ext_authz.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_config_core_v3_base_pb = require('../../../../../../envoy/config/core/v3/base_pb.js');
goog.object.extend(proto, envoy_config_core_v3_base_pb);
var envoy_config_core_v3_config_source_pb = require('../../../../../../envoy/config/core/v3/config_source_pb.js');
goog.object.extend(proto, envoy_config_core_v3_config_source_pb);
var envoy_config_core_v3_grpc_service_pb = require('../../../../../../envoy/config/core/v3/grpc_service_pb.js');
goog.object.extend(proto, envoy_config_core_v3_grpc_service_pb);
var envoy_config_core_v3_http_uri_pb = require('../../../../../../envoy/config/core/v3/http_uri_pb.js');
goog.object.extend(proto, envoy_config_core_v3_http_uri_pb);
var envoy_type_matcher_v3_metadata_pb = require('../../../../../../envoy/type/matcher/v3/metadata_pb.js');
goog.object.extend(proto, envoy_type_matcher_v3_metadata_pb);
var envoy_type_matcher_v3_string_pb = require('../../../../../../envoy/type/matcher/v3/string_pb.js');
goog.object.extend(proto, envoy_type_matcher_v3_string_pb);
var envoy_type_v3_http_status_pb = require('../../../../../../envoy/type/v3/http_status_pb.js');
goog.object.extend(proto, envoy_type_v3_http_status_pb);
var envoy_annotations_deprecation_pb = require('../../../../../../envoy/annotations/deprecation_pb.js');
goog.object.extend(proto, envoy_annotations_deprecation_pb);
var udpa_annotations_status_pb = require('../../../../../../udpa/annotations/status_pb.js');
goog.object.extend(proto, udpa_annotations_status_pb);
var udpa_annotations_versioning_pb = require('../../../../../../udpa/annotations/versioning_pb.js');
goog.object.extend(proto, udpa_annotations_versioning_pb);
var validate_validate_pb = require('../../../../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest', null, global);
goog.exportSymbol('proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse', null, global);
goog.exportSymbol('proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings', null, global);
goog.exportSymbol('proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings', null, global);
goog.exportSymbol('proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz', null, global);
goog.exportSymbol('proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.ServicesCase', null, global);
goog.exportSymbol('proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute', null, global);
goog.exportSymbol('proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.OverrideCase', null, global);
goog.exportSymbol('proto.envoy.extensions.filters.http.ext_authz.v3.HttpService', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.repeatedFields_, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.displayName = 'proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.displayName = 'proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.http.ext_authz.v3.HttpService, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.displayName = 'proto.envoy.extensions.filters.http.ext_authz.v3.HttpService';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.repeatedFields_, null);
};
goog.inherits(proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.displayName = 'proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.displayName = 'proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.oneofGroups_);
};
goog.inherits(proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.displayName = 'proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.displayName = 'proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.repeatedFields_ = [8];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_ = [[1,3]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.ServicesCase = {
  SERVICES_NOT_SET: 0,
  GRPC_SERVICE: 1,
  HTTP_SERVICE: 3
};

/**
 * @return {proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.ServicesCase}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getServicesCase = function() {
  return /** @type {proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.ServicesCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.toObject = function(includeInstance, msg) {
  var f, obj = {
    grpcService: (f = msg.getGrpcService()) && envoy_config_core_v3_grpc_service_pb.GrpcService.toObject(includeInstance, f),
    httpService: (f = msg.getHttpService()) && proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.toObject(includeInstance, f),
    transportApiVersion: jspb.Message.getFieldWithDefault(msg, 12, 0),
    failureModeAllow: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    withRequestBody: (f = msg.getWithRequestBody()) && proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.toObject(includeInstance, f),
    clearRouteCache: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    statusOnError: (f = msg.getStatusOnError()) && envoy_type_v3_http_status_pb.HttpStatus.toObject(includeInstance, f),
    metadataContextNamespacesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    filterEnabled: (f = msg.getFilterEnabled()) && envoy_config_core_v3_base_pb.RuntimeFractionalPercent.toObject(includeInstance, f),
    filterEnabledMetadata: (f = msg.getFilterEnabledMetadata()) && envoy_type_matcher_v3_metadata_pb.MetadataMatcher.toObject(includeInstance, f),
    denyAtDisable: (f = msg.getDenyAtDisable()) && envoy_config_core_v3_base_pb.RuntimeFeatureFlag.toObject(includeInstance, f),
    includePeerCertificate: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    statPrefix: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz;
  return proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_config_core_v3_grpc_service_pb.GrpcService;
      reader.readMessage(value,envoy_config_core_v3_grpc_service_pb.GrpcService.deserializeBinaryFromReader);
      msg.setGrpcService(value);
      break;
    case 3:
      var value = new proto.envoy.extensions.filters.http.ext_authz.v3.HttpService;
      reader.readMessage(value,proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.deserializeBinaryFromReader);
      msg.setHttpService(value);
      break;
    case 12:
      var value = /** @type {!proto.envoy.config.core.v3.ApiVersion} */ (reader.readEnum());
      msg.setTransportApiVersion(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailureModeAllow(value);
      break;
    case 5:
      var value = new proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings;
      reader.readMessage(value,proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.deserializeBinaryFromReader);
      msg.setWithRequestBody(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClearRouteCache(value);
      break;
    case 7:
      var value = new envoy_type_v3_http_status_pb.HttpStatus;
      reader.readMessage(value,envoy_type_v3_http_status_pb.HttpStatus.deserializeBinaryFromReader);
      msg.setStatusOnError(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addMetadataContextNamespaces(value);
      break;
    case 9:
      var value = new envoy_config_core_v3_base_pb.RuntimeFractionalPercent;
      reader.readMessage(value,envoy_config_core_v3_base_pb.RuntimeFractionalPercent.deserializeBinaryFromReader);
      msg.setFilterEnabled(value);
      break;
    case 14:
      var value = new envoy_type_matcher_v3_metadata_pb.MetadataMatcher;
      reader.readMessage(value,envoy_type_matcher_v3_metadata_pb.MetadataMatcher.deserializeBinaryFromReader);
      msg.setFilterEnabledMetadata(value);
      break;
    case 11:
      var value = new envoy_config_core_v3_base_pb.RuntimeFeatureFlag;
      reader.readMessage(value,envoy_config_core_v3_base_pb.RuntimeFeatureFlag.deserializeBinaryFromReader);
      msg.setDenyAtDisable(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludePeerCertificate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrpcService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_config_core_v3_grpc_service_pb.GrpcService.serializeBinaryToWriter
    );
  }
  f = message.getHttpService();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.serializeBinaryToWriter
    );
  }
  f = message.getTransportApiVersion();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getFailureModeAllow();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getWithRequestBody();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.serializeBinaryToWriter
    );
  }
  f = message.getClearRouteCache();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getStatusOnError();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      envoy_type_v3_http_status_pb.HttpStatus.serializeBinaryToWriter
    );
  }
  f = message.getMetadataContextNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getFilterEnabled();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      envoy_config_core_v3_base_pb.RuntimeFractionalPercent.serializeBinaryToWriter
    );
  }
  f = message.getFilterEnabledMetadata();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      envoy_type_matcher_v3_metadata_pb.MetadataMatcher.serializeBinaryToWriter
    );
  }
  f = message.getDenyAtDisable();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      envoy_config_core_v3_base_pb.RuntimeFeatureFlag.serializeBinaryToWriter
    );
  }
  f = message.getIncludePeerCertificate();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getStatPrefix();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional envoy.config.core.v3.GrpcService grpc_service = 1;
 * @return {?proto.envoy.config.core.v3.GrpcService}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getGrpcService = function() {
  return /** @type{?proto.envoy.config.core.v3.GrpcService} */ (
    jspb.Message.getWrapperField(this, envoy_config_core_v3_grpc_service_pb.GrpcService, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.GrpcService|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setGrpcService = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearGrpcService = function() {
  return this.setGrpcService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasGrpcService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HttpService http_service = 3;
 * @return {?proto.envoy.extensions.filters.http.ext_authz.v3.HttpService}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getHttpService = function() {
  return /** @type{?proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.ext_authz.v3.HttpService, 3));
};


/**
 * @param {?proto.envoy.extensions.filters.http.ext_authz.v3.HttpService|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setHttpService = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearHttpService = function() {
  return this.setHttpService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasHttpService = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.config.core.v3.ApiVersion transport_api_version = 12;
 * @return {!proto.envoy.config.core.v3.ApiVersion}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getTransportApiVersion = function() {
  return /** @type {!proto.envoy.config.core.v3.ApiVersion} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.envoy.config.core.v3.ApiVersion} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setTransportApiVersion = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional bool failure_mode_allow = 2;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getFailureModeAllow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setFailureModeAllow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional BufferSettings with_request_body = 5;
 * @return {?proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getWithRequestBody = function() {
  return /** @type{?proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings, 5));
};


/**
 * @param {?proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setWithRequestBody = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearWithRequestBody = function() {
  return this.setWithRequestBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasWithRequestBody = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool clear_route_cache = 6;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getClearRouteCache = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setClearRouteCache = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional envoy.type.v3.HttpStatus status_on_error = 7;
 * @return {?proto.envoy.type.v3.HttpStatus}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getStatusOnError = function() {
  return /** @type{?proto.envoy.type.v3.HttpStatus} */ (
    jspb.Message.getWrapperField(this, envoy_type_v3_http_status_pb.HttpStatus, 7));
};


/**
 * @param {?proto.envoy.type.v3.HttpStatus|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setStatusOnError = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearStatusOnError = function() {
  return this.setStatusOnError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasStatusOnError = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated string metadata_context_namespaces = 8;
 * @return {!Array<string>}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getMetadataContextNamespacesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setMetadataContextNamespacesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.addMetadataContextNamespaces = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearMetadataContextNamespacesList = function() {
  return this.setMetadataContextNamespacesList([]);
};


/**
 * optional envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;
 * @return {?proto.envoy.config.core.v3.RuntimeFractionalPercent}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getFilterEnabled = function() {
  return /** @type{?proto.envoy.config.core.v3.RuntimeFractionalPercent} */ (
    jspb.Message.getWrapperField(this, envoy_config_core_v3_base_pb.RuntimeFractionalPercent, 9));
};


/**
 * @param {?proto.envoy.config.core.v3.RuntimeFractionalPercent|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setFilterEnabled = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearFilterEnabled = function() {
  return this.setFilterEnabled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasFilterEnabled = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;
 * @return {?proto.envoy.type.matcher.v3.MetadataMatcher}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getFilterEnabledMetadata = function() {
  return /** @type{?proto.envoy.type.matcher.v3.MetadataMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_v3_metadata_pb.MetadataMatcher, 14));
};


/**
 * @param {?proto.envoy.type.matcher.v3.MetadataMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setFilterEnabledMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearFilterEnabledMetadata = function() {
  return this.setFilterEnabledMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasFilterEnabledMetadata = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;
 * @return {?proto.envoy.config.core.v3.RuntimeFeatureFlag}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getDenyAtDisable = function() {
  return /** @type{?proto.envoy.config.core.v3.RuntimeFeatureFlag} */ (
    jspb.Message.getWrapperField(this, envoy_config_core_v3_base_pb.RuntimeFeatureFlag, 11));
};


/**
 * @param {?proto.envoy.config.core.v3.RuntimeFeatureFlag|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setDenyAtDisable = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.clearDenyAtDisable = function() {
  return this.setDenyAtDisable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.hasDenyAtDisable = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool include_peer_certificate = 10;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getIncludePeerCertificate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setIncludePeerCertificate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string stat_prefix = 13;
 * @return {string}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.getStatPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.prototype.setStatPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxRequestBytes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    allowPartialMessage: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    packAsBytes: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings;
  return proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxRequestBytes(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowPartialMessage(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPackAsBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxRequestBytes();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAllowPartialMessage();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPackAsBytes();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint32 max_request_bytes = 1;
 * @return {number}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.prototype.getMaxRequestBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.prototype.setMaxRequestBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool allow_partial_message = 2;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.prototype.getAllowPartialMessage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.prototype.setAllowPartialMessage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool pack_as_bytes = 3;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.prototype.getPackAsBytes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.prototype.setPackAsBytes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverUri: (f = msg.getServerUri()) && envoy_config_core_v3_http_uri_pb.HttpUri.toObject(includeInstance, f),
    pathPrefix: jspb.Message.getFieldWithDefault(msg, 2, ""),
    authorizationRequest: (f = msg.getAuthorizationRequest()) && proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.toObject(includeInstance, f),
    authorizationResponse: (f = msg.getAuthorizationResponse()) && proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.ext_authz.v3.HttpService;
  return proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_config_core_v3_http_uri_pb.HttpUri;
      reader.readMessage(value,envoy_config_core_v3_http_uri_pb.HttpUri.deserializeBinaryFromReader);
      msg.setServerUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathPrefix(value);
      break;
    case 7:
      var value = new proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest;
      reader.readMessage(value,proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.deserializeBinaryFromReader);
      msg.setAuthorizationRequest(value);
      break;
    case 8:
      var value = new proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse;
      reader.readMessage(value,proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.deserializeBinaryFromReader);
      msg.setAuthorizationResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerUri();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_config_core_v3_http_uri_pb.HttpUri.serializeBinaryToWriter
    );
  }
  f = message.getPathPrefix();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAuthorizationRequest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.serializeBinaryToWriter
    );
  }
  f = message.getAuthorizationResponse();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.config.core.v3.HttpUri server_uri = 1;
 * @return {?proto.envoy.config.core.v3.HttpUri}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.getServerUri = function() {
  return /** @type{?proto.envoy.config.core.v3.HttpUri} */ (
    jspb.Message.getWrapperField(this, envoy_config_core_v3_http_uri_pb.HttpUri, 1));
};


/**
 * @param {?proto.envoy.config.core.v3.HttpUri|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.setServerUri = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.clearServerUri = function() {
  return this.setServerUri(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.hasServerUri = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string path_prefix = 2;
 * @return {string}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.getPathPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.setPathPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional AuthorizationRequest authorization_request = 7;
 * @return {?proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.getAuthorizationRequest = function() {
  return /** @type{?proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest, 7));
};


/**
 * @param {?proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.setAuthorizationRequest = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.clearAuthorizationRequest = function() {
  return this.setAuthorizationRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.hasAuthorizationRequest = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional AuthorizationResponse authorization_response = 8;
 * @return {?proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.getAuthorizationResponse = function() {
  return /** @type{?proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse, 8));
};


/**
 * @param {?proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.setAuthorizationResponse = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.HttpService} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.clearAuthorizationResponse = function() {
  return this.setAuthorizationResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.HttpService.prototype.hasAuthorizationResponse = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowedHeaders: (f = msg.getAllowedHeaders()) && envoy_type_matcher_v3_string_pb.ListStringMatcher.toObject(includeInstance, f),
    headersToAddList: jspb.Message.toObjectList(msg.getHeadersToAddList(),
    envoy_config_core_v3_base_pb.HeaderValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest;
  return proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_type_matcher_v3_string_pb.ListStringMatcher;
      reader.readMessage(value,envoy_type_matcher_v3_string_pb.ListStringMatcher.deserializeBinaryFromReader);
      msg.setAllowedHeaders(value);
      break;
    case 2:
      var value = new envoy_config_core_v3_base_pb.HeaderValue;
      reader.readMessage(value,envoy_config_core_v3_base_pb.HeaderValue.deserializeBinaryFromReader);
      msg.addHeadersToAdd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowedHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_type_matcher_v3_string_pb.ListStringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getHeadersToAddList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      envoy_config_core_v3_base_pb.HeaderValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.type.matcher.v3.ListStringMatcher allowed_headers = 1;
 * @return {?proto.envoy.type.matcher.v3.ListStringMatcher}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.getAllowedHeaders = function() {
  return /** @type{?proto.envoy.type.matcher.v3.ListStringMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_v3_string_pb.ListStringMatcher, 1));
};


/**
 * @param {?proto.envoy.type.matcher.v3.ListStringMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.setAllowedHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.clearAllowedHeaders = function() {
  return this.setAllowedHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.hasAllowedHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated envoy.config.core.v3.HeaderValue headers_to_add = 2;
 * @return {!Array<!proto.envoy.config.core.v3.HeaderValue>}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.getHeadersToAddList = function() {
  return /** @type{!Array<!proto.envoy.config.core.v3.HeaderValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_config_core_v3_base_pb.HeaderValue, 2));
};


/**
 * @param {!Array<!proto.envoy.config.core.v3.HeaderValue>} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.setHeadersToAddList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.config.core.v3.HeaderValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.core.v3.HeaderValue}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.addHeadersToAdd = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.config.core.v3.HeaderValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationRequest.prototype.clearHeadersToAddList = function() {
  return this.setHeadersToAddList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowedUpstreamHeaders: (f = msg.getAllowedUpstreamHeaders()) && envoy_type_matcher_v3_string_pb.ListStringMatcher.toObject(includeInstance, f),
    allowedUpstreamHeadersToAppend: (f = msg.getAllowedUpstreamHeadersToAppend()) && envoy_type_matcher_v3_string_pb.ListStringMatcher.toObject(includeInstance, f),
    allowedClientHeaders: (f = msg.getAllowedClientHeaders()) && envoy_type_matcher_v3_string_pb.ListStringMatcher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse;
  return proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_type_matcher_v3_string_pb.ListStringMatcher;
      reader.readMessage(value,envoy_type_matcher_v3_string_pb.ListStringMatcher.deserializeBinaryFromReader);
      msg.setAllowedUpstreamHeaders(value);
      break;
    case 3:
      var value = new envoy_type_matcher_v3_string_pb.ListStringMatcher;
      reader.readMessage(value,envoy_type_matcher_v3_string_pb.ListStringMatcher.deserializeBinaryFromReader);
      msg.setAllowedUpstreamHeadersToAppend(value);
      break;
    case 2:
      var value = new envoy_type_matcher_v3_string_pb.ListStringMatcher;
      reader.readMessage(value,envoy_type_matcher_v3_string_pb.ListStringMatcher.deserializeBinaryFromReader);
      msg.setAllowedClientHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowedUpstreamHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_type_matcher_v3_string_pb.ListStringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getAllowedUpstreamHeadersToAppend();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      envoy_type_matcher_v3_string_pb.ListStringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getAllowedClientHeaders();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      envoy_type_matcher_v3_string_pb.ListStringMatcher.serializeBinaryToWriter
    );
  }
};


/**
 * optional envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;
 * @return {?proto.envoy.type.matcher.v3.ListStringMatcher}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.getAllowedUpstreamHeaders = function() {
  return /** @type{?proto.envoy.type.matcher.v3.ListStringMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_v3_string_pb.ListStringMatcher, 1));
};


/**
 * @param {?proto.envoy.type.matcher.v3.ListStringMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.setAllowedUpstreamHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.clearAllowedUpstreamHeaders = function() {
  return this.setAllowedUpstreamHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.hasAllowedUpstreamHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;
 * @return {?proto.envoy.type.matcher.v3.ListStringMatcher}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.getAllowedUpstreamHeadersToAppend = function() {
  return /** @type{?proto.envoy.type.matcher.v3.ListStringMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_v3_string_pb.ListStringMatcher, 3));
};


/**
 * @param {?proto.envoy.type.matcher.v3.ListStringMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.setAllowedUpstreamHeadersToAppend = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.clearAllowedUpstreamHeadersToAppend = function() {
  return this.setAllowedUpstreamHeadersToAppend(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.hasAllowedUpstreamHeadersToAppend = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;
 * @return {?proto.envoy.type.matcher.v3.ListStringMatcher}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.getAllowedClientHeaders = function() {
  return /** @type{?proto.envoy.type.matcher.v3.ListStringMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_v3_string_pb.ListStringMatcher, 2));
};


/**
 * @param {?proto.envoy.type.matcher.v3.ListStringMatcher|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.setAllowedClientHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.clearAllowedClientHeaders = function() {
  return this.setAllowedClientHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse.prototype.hasAllowedClientHeaders = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.OverrideCase = {
  OVERRIDE_NOT_SET: 0,
  DISABLED: 1,
  CHECK_SETTINGS: 2
};

/**
 * @return {proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.OverrideCase}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.getOverrideCase = function() {
  return /** @type {proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.OverrideCase} */(jspb.Message.computeOneofCase(this, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.toObject = function(includeInstance, msg) {
  var f, obj = {
    disabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    checkSettings: (f = msg.getCheckSettings()) && proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute;
  return proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    case 2:
      var value = new proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings;
      reader.readMessage(value,proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.deserializeBinaryFromReader);
      msg.setCheckSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCheckSettings();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool disabled = 1;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.setDisabled = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.clearDisabled = function() {
  return jspb.Message.setOneofField(this, 1, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.hasDisabled = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CheckSettings check_settings = 2;
 * @return {?proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.getCheckSettings = function() {
  return /** @type{?proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings} */ (
    jspb.Message.getWrapperField(this, proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings, 2));
};


/**
 * @param {?proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings|undefined} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute} returns this
*/
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.setCheckSettings = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.clearCheckSettings = function() {
  return this.setCheckSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute.prototype.hasCheckSettings = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextExtensionsMap: (f = msg.getContextExtensionsMap()) ? f.toObject(includeInstance, undefined) : [],
    disableRequestBodyBuffering: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings;
  return proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getContextExtensionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableRequestBodyBuffering(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextExtensionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getDisableRequestBodyBuffering();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * map<string, string> context_extensions = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.prototype.getContextExtensionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.prototype.clearContextExtensionsMap = function() {
  this.getContextExtensionsMap().clear();
  return this;};


/**
 * optional bool disable_request_body_buffering = 2;
 * @return {boolean}
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.prototype.getDisableRequestBodyBuffering = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings} returns this
 */
proto.envoy.extensions.filters.http.ext_authz.v3.CheckSettings.prototype.setDisableRequestBodyBuffering = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.envoy.extensions.filters.http.ext_authz.v3);
